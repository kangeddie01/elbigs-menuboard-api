<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.elbigs.mapper.TourismMapper">
       <select id="selectTourismListByLang" resultType="com.elbigs.dto.TourismDto">
        select s.id
            <if test="lang!=null and lang=='ko'">
             , s."name"
             , s.addr
             , s.charges
             , s.holiday
             , s.information
             , s.time
            </if>
            <if test="lang!=null and lang=='en'">
             , s.en_name
             , s.en_addr
             , s.en_charges
             , s.en_holiday
             , s.en_information
             , s.en_time
            </if>
            <if test="lang!=null and lang=='cn'">
             , s.cn_name
             , s.cn_addr
             , s.cn_charges
             , s.cn_holiday
             , s.cn_information
             , s.cn_time
            </if>
            <if test="lang!=null and lang=='jp'">
             , s.jp_name
             , s.jp_addr
             , s.jp_charges
             , s.jp_holiday
             , s.jp_information
             , s.jp_time
            </if>
             , to_char(s.created_at , 'YYYY-MM-DD') as created_at
             , to_char(s.updated_at , 'YYYY-MM-DD') as updated_at
             , count(1) over() total_count
          from tourisms s
         where s.user_id = #{userPk}
           and s.deleted_at is null
         order by s.id
    </select>
    <select id="selectTourismList" resultType="com.elbigs.dto.TourismDto">
        select s.id
             , s."name"
             , s.en_name
             , s.cn_name
             , s.jp_name
             , s.addr
             , s.en_addr
             , s.cn_addr
             , s.jp_addr
             , s.charges
             , s.en_charges
             , s.cn_charges
             , s.jp_charges
             , s.holiday
             , s.en_holiday
             , s.cn_holiday
             , s.jp_holiday
             , s.information
             , s.en_information
             , s.cn_information
             , s.jp_information
             , s.time
             , s.en_time
             , s.cn_time
             , s.jp_time
             , to_char(s.created_at , 'YYYY-MM-DD') as created_at
             , to_char(s.updated_at , 'YYYY-MM-DD') as updated_at
             , count(1) over() total_count
          from tourisms s
         where s.user_id = #{userPk}
           and s.deleted_at is null
           <if test="searchStr!=null and searchStr!=''">
           and s.name like '%'|| #{searchStr} ||'%'
           </if>
         order by s.id
        <if test="length > 0">
         limit #{length} offset #{beginNo}
        </if>
    </select>
    <select id="selectTourism" resultType="com.elbigs.dto.TourismDto">
        select id
             , user_id
             , name
             , en_name
             , cn_name
             , jp_name
             , information
             , en_information
             , cn_information
             , jp_information
             , addr
             , en_addr
             , cn_addr
             , jp_addr
             , holiday
             , en_holiday
             , cn_holiday
             , jp_holiday
             , charges
             , en_charges
             , cn_charges
             , jp_charges
             , time
             , en_time
             , cn_time
             , jp_time
             , created_at
             , updated_at
             , deleted_at
          from tourisms s
         where id = #{id}
    </select>
    <insert id="insertTourism" parameterType="com.elbigs.entity.TourismEntity">
        insert into tourisms (
                    user_id
                  , "name"
                  , en_name
                  , cn_name
                  , jp_name
                  , information
                  , en_information
                  , cn_information
                  , jp_information
                  , addr
                  , en_addr
                  , cn_addr
                  , jp_addr
                  , holiday
                  , en_holiday
                  , cn_holiday
                  , jp_holiday
                  , charges
                  , en_charges
                  , cn_charges
                  , jp_charges
                  , "time"
                  , en_time
                  , cn_time
                  , jp_time
                  , created_at )
        values (  #{userId}, #{name}, #{enName}, #{cnName}, #{jpName}, #{information}, #{enInformation}, #{cnInformation}, #{jpInformation}, #{addr}, #{enAddr}, #{cnAddr}, #{jpAddr}
                , #{holiday}, #{enHoliday}, #{cnHoliday}, #{jpHoliday}, #{charges}, #{enCharges}, #{cnCharges}, #{jpCharges}, #{time}, #{enTime}, #{cnTime}, #{jpTime},  now())
        <selectKey keyProperty="id" resultType="long" order="AFTER">
            select currval('tourisms_id_seq')
        </selectKey>
    </insert>
   <update id="updateTourism">
           update tourisms
           set user_id = #{userId}
              , "name" = #{name}
              , en_name = #{enName}
              , cn_name = #{cnName}
              , jp_name = #{jpName}
              , information = #{information}
              , en_information = #{enInformation}
              , cn_information = #{cnInformation}
              , jp_information = #{jpInformation}
              , addr = #{addr}
              , en_addr = #{enAddr}
              , cn_addr = #{cnAddr}
              , jp_addr = #{jpAddr}
              , holiday = #{holiday}
              , en_holiday = #{enHoliday}
              , cn_holiday = #{cnHoliday}
              , jp_holiday = #{jpHoliday}
              , charges = #{charges}
              , en_charges = #{enCharges}
              , cn_charges = #{cnCharges}
              , jp_charges = #{jpCharges}
              , "time" = #{time}
              , en_time = #{enTime}
              , cn_time = #{cnTime}
              , jp_time = #{jpTime}
             , updated_at = now()
           where id = #{id}
    </update>
    <update id="deleteTourism">
       update tourisms
          set deleted_at = now()
        where id = #{id}
    </update>
</mapper>
