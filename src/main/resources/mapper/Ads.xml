<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.elbigs.mapper.AdverMapper">
    <select id="selectAdverList" resultType="com.elbigs.dto.AdverDto">
        select s.id
             , s.user_id
             , s.title
             , s.is_all
             , s.is_reserved
             , to_char(s.start_date , 'YYYY-MM-DD') as start_date
             , to_char(s.end_date , 'YYYY-MM-DD') as end_date
             , to_char(s.created_at , 'YYYY-MM-DD') as created_at
             , to_char(s.updated_at , 'YYYY-MM-DD') as updated_at
             , count(1) over() total_count
          from ads s
         where s.user_id = #{userPk}
        <if test="searchStr!=null and searchStr!=''">
           and title like '%'|| #{searchStr} ||'%'
        </if>
        <if test="startDate!=null and startDate!=''">
           and created_at between to_date(#{startDate}, 'yyyy-mm-dd') and to_date(#{endDate}, 'yyyy-mm-dd') + 1
        </if>
         order by s.id desc
         limit #{length} offset #{beginNo}
    </select>
    <select id="selectAdver" resultType="com.elbigs.dto.AdverDto">
          select s.id
               , s.user_id
               , s.title
               , s.is_all
               , s.is_reserved
               , to_char(s.start_date , 'YYYY-MM-DD') as start_date
               , to_char(s.end_date , 'YYYY-MM-DD') as end_date
               , s.created_at
               , s.updated_at
            from ads s left outer join shops s1 on s.shop_id = s1.id
           where s.id = #{id}
    </select>
    <insert id="insertAdver" parameterType="com.elbigs.entity.AdverEntity">
        insert into ads (
                    user_id
                  , title
                  , is_all
                  , is_reserved
                  , start_date
                  , end_date
                  , created_at )
        values (  #{userId}, #{title}, #{isAll}, #{isReserved}
                , TO_TIMESTAMP(#{startDate}, 'yyyy-mm-dd'), TO_TIMESTAMP(#{endDate}, 'yyyy-mm-dd'), now()
        <selectKey keyProperty="id" resultType="long" order="AFTER">
            select currval('ads_id_seq')
        </selectKey>
    </insert>
   <update id="updateAdver">
           update ads
              set user_id = #{userId}
                , title = #{title}
                , is_all = #{isAll}
                , is_reserved = #{isReserved}
                , start_date = TO_TIMESTAMP(#{startDate}, 'yyyy-mm-dd')
                , end_date = TO_TIMESTAMP(#{endDate}, 'yyyy-mm-dd')
                , updated_at = now()
            where id = #{id}
    </update>
    <delete id="deleteAdver">
       delete from ads
        where id = #{id}
    </delete>

    <resultMap id="selectAdListByKioskResult" type="HashMap">
        <id column="id" property="id"/>
        <id column="timer" property="timer"/>
        <id column="img_src" property="imgSrc"/>
    </resultMap>
    <select id="selectAdListByKiosk" resultMap="selectAdListByKioskResult">
        select ad.id, ad.time as timer, f.full_path as img_src
          from ads a join ad_details ad on a.id = ad.ad_id
          join files f on f.connectable_id = ad.id and f.connectable_type ='App\Models\AdDetail'
         where a.user_id = #{userPk}
           and now() between a.start_date and a.end_date + 1
           and kiosk_id = ( select id from kiosks k where mac_address = #{macAddress})
         order by a.id, ad.order
    </select>
</mapper>
